server:
  port: 0

management:
  endpoint:
    health:
      enabled: true
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"
    diskspace:
      enabled: true
      
spring:
      
  main:
    banner-mode: "off"
  application:
    name: app-mirror

#  jms:
#    listener:
#      concurrency: 1
#      max-concurrency: 10
#      acknowledge-mode: auto
#  activemq:
#    user: admin
#    password: password
#    in-memory: false
#    broker-url: tcp://localhost:61616

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/spring-charon
    username: user
    password: password
    initialization-mode: always
  jpa:
    hibernate:
      ddl-auto: update
      dialect: org.hibernate.dialect.MySQL8Dialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect   
       
  kafka:
    properties:
      schema.registry.url: http://localhost:8081  
      specific.avro.reader: true
      auto.register.schemas: true
    consumer:
      group-id: consumerGroup
      auto-offset-reset: earliest
      enable-auto-commit: false
      bootstrap-servers: kafka-1:19092,kafka-2:29092,kafka-3:39092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
#      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      properties:
        interceptor:
          classes: com.github.ricardocomar.springcharon.appmirror.config.KafkaMessageInterceptor
      bootstrap-servers: kafka-1:19092,kafka-2:29092,kafka-3:39092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      