server:
  port: 0

management:
  endpoint:
    health:
      enabled: true
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"
    diskspace:
      enabled: true
      
spring:
  jms:
    listener:
      concurrency: 1
      max-concurrency: 10
      acknowledge-mode: auto
      
  main:
    banner-mode: "off"
  application:
    name: etl-consumer
  activemq:
    user: admin
    password: password
    in-memory: false
    broker-url: tcp://localhost:61616
       
  kafka:
    properties:
      schema.registry.url: http://localhost:8081  
      specific.avro.reader: true
      auto.register.schemas: true
    consumer:
      bootstrap-servers: kafka-1:19092,kafka-2:29092,kafka-3:39092
      group-id: consumerGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
    producer:
      properties:
        interceptor:
          classes: com.github.ricardocomar.springbootetl.etlconsumer.config.KafkaMessageInterceptor
      bootstrap-servers: kafka-1:19092,kafka-2:29092,kafka-3:39092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      