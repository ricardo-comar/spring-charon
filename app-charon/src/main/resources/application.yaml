server:
  port: 0

#eureka:
#  client:
#    healthcheck:
#      enabled: true
#    register-with-eureka: true
#    fetch-registry: true
#    service-url:
#      defaultZone: ${EUREKA_URI:http://localhost:8080/eureka}
#  instance:
#    appname: app-charon
#    instance-id: app-charon-${random.value}
eureka:
  client:
    register-with-eureka: false
    fetch-registry: false


management:
  endpoint:
    health:
      enabled: true
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"
    diskspace:
      enabled: true
      
spring:
  jms:
    listener:
      concurrency: 5
      max-concurrency: 10
      acknowledge-mode: client
      
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/spring-charon
    username: user
    password: password
    initialization-mode: always
  jpa:
    hibernate:
      ddl-auto: update
      dialect: org.hibernate.dialect.MySQL8Dialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect   
      
  main:
    banner-mode: "off"
  application:
    name: app-charon
  activemq:
    user: admin
    password: password
    in-memory: false
    broker-url: tcp://localhost:61616
#  cloud:
#    discovery:
#      enabled: true
#      client:
#        composite-indicator:
#          enabled: false
#        health-indicator:
#          enabled: true
#          include-description: true
#    config:
#      enabled: false
       
  kafka:
    properties:
      schema.registry.url: http://localhost:8081  
      specific.avro.reader: true
      auto.register.schemas: true
    consumer:
      bootstrap-servers: kafka-1:19092,kafka-2:29092,kafka-3:39092
      group-id: consumerGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
    producer:
      properties:
        interceptor:
          classes: com.github.ricardocomar.springcharon.appcharon.config.KafkaMessageInterceptor
      bootstrap-servers: kafka-1:19092,kafka-2:29092,kafka-3:39092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      